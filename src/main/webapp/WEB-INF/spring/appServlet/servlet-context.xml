<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/prop" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jdbc 
     	 http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util 
      	http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 8. The mvc namespace is declared as the default namespace. 
            The <annotation-driven> tag enables the support of annotation configuration 
            for Spring MVC controllers, as well as enabling Spring type conversion 
            and formatting support.
    -->
    <annotation-driven />
	
	
	<!-- The <resources> tag defines the static resources (e.g, CSS, JavaScript, and images) 
	     and their locations so Spring MVC can improve the performance in serving those files.
	     Spring MVC looks at the "location" attribute to find and return static resources.
	     "location" is the location to the folder where the resources are placed.
	     "mapping" specifies under what uri will resources be accessible on the web
	-->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- For the ViewResolver interface, we will be using the InternalResourceViewResolver class as the
		implementation. Notice the suffix  .jspx.
		Next step is to implement the ContactController class.
	-->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jspx" />
	</beans:bean>

		
	<context:component-scan base-package="com.budget"/>

    
</beans:beans>
