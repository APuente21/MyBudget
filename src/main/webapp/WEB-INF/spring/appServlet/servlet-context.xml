<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- The <annotation-driven> tag enables the support of annotation configuration 
            for Spring MVC controllers, as well as enabling Spring type conversion 
            and formatting support.
    -->
    <mvc:annotation-driven />
	<!-- The <resources> tag defines the static resources (e.g, CSS, JavaScript, and images) 
	     and their locations so Spring MVC can improve the performance in serving those files.
	     Spring MVC looks at the "location" attribute to find and return static resources.
	     "location" is the location to the folder where the resources are placed.
	     "mapping" specifies under what uri will resources be accessible on the web
	-->
    
    <mvc:resources location="/" mapping="/resources/**" />


    <!-- For the ViewResolver interface, we will be using the InternalResourceViewResolver class as the
		implementation. Notice the suffix  .jspx.
		Next step is to implement the ContactController class.
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.budget"/>

	<!-- Related to form validation -->
	<beans:bean id="logInFormValidator" class="com.budget.validator.LogInFormValidator" />
	
	
	<beans:bean id="userFormValidator" class="com.budget.validator.UserFormValidator" />
	 
	<beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
                id="messageSource" p:basename="WEB-INF/messages/messages"
                p:fallbackToSystemLocale="false"/>
	
</beans:beans>
